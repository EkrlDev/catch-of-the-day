{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","image","desc","addFish","currentTarget","reset","placeholeder","EditFishForm","handleChange","console","log","updatedFish","updateFish","index","handleClick","deleteFish","onChange","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.38f9827b.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { getFunName } from \"../helpers\";\r\n\r\nclass StorePicker extends React.Component {\r\n  myInput = React.createRef();\r\n\r\n  static propTypes = {\r\n    history: PropTypes.object\r\n  }\r\n\r\n  goToStore = event => {\r\n    // 1. Stop the form from submitting\r\n    event.preventDefault();\r\n    // 2. get the text from that input\r\n    const storeName = this.myInput.current.value;\r\n    // 3. Change the page to /store/whatever-they-entered\r\n    this.props.history.push(`/store/${storeName}`)\r\n  };\r\n  render() {\r\n    return (\r\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\r\n        <h2>Please Enter A Store</h2>\r\n        <input\r\n          type=\"text\"\r\n          ref={this.myInput}\r\n          required\r\n          placeholder=\"Store Name\"\r\n          defaultValue={getFunName()}\r\n        />\r\n        <button type=\"submit\">Visit Store →</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StorePicker;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return(\r\n            <header className=\"top\">\r\n                <h1>Catch \r\n                   <span className=\"ofThe\">\r\n                    <span className=\"of\">Of</span>\r\n                    <span className=\"the\">The</span>\r\n                    </span>\r\n                    Day\r\n                    </h1>\r\n                <h3 className=\"tagline\">\r\n                <span>{this.props.tagline}</span>\r\n                </h3>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nHeader.propTypes = {\r\n    tagline: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\nimport { formatPrice } from \"../helpers\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nclass Order extends React.Component {\r\n\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    order: PropTypes.object,\r\n    removeFromOrder: PropTypes.func\r\n  }\r\n\r\n  renderOrder = (key) => {\r\n    const fish = this.props.fishes[key];\r\n    const count = this.props.order[key];\r\n    const isAvailable = fish && fish.status === \"available\";\r\n\r\n    if (!fish) return null;\r\n\r\n    if (!isAvailable) {\r\n      return (\r\n        <CSSTransition\r\n          classNames=\"order\"\r\n          key={key}\r\n          timeout={{ enter: 500, exit: 500 }}\r\n        >\r\n          <li key={key}>\r\n            Sorry {fish ? fish.name : \"fish\"} is no longer available\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <CSSTransition\r\n        classNames=\"order\"\r\n        key={key}\r\n        timeout={{ enter: 500, exit: 500 }}\r\n      >\r\n        <li key={key}>\r\n          <span>\r\n            <TransitionGroup component='span' className='count'>\r\n              <CSSTransition classNames='count' key={count} timeout={{enter: 500, exit:500}}>\r\n                <span>{count}</span>\r\n              </CSSTransition>\r\n            </TransitionGroup>\r\n           lbs {fish.name}\r\n          {formatPrice(count * fish.price)}\r\n          <button\r\n            onClick={() => {\r\n              this.props.removeFromOrder(key);\r\n            }}\r\n          >\r\n            &times;\r\n          </button>\r\n          </span>\r\n        </li>\r\n      </CSSTransition>\r\n    );\r\n  };\r\n  render() {\r\n    const orderIds = Object.keys(this.props.order);\r\n\r\n    const total = orderIds.reduce((prevTotal, key) => {\r\n      const fish = this.props.fishes[key];\r\n      const count = this.props.order[key];\r\n      const isAvailable = fish && fish.status === \"available\";\r\n      if (isAvailable) {\r\n        return prevTotal + count * fish.price;\r\n      }\r\n      return prevTotal;\r\n    }, 0);\r\n\r\n    return (\r\n      <div className=\"order-wrap\">\r\n        <h2>Order</h2>\r\n        <TransitionGroup component=\"ul\" className=\"order\">\r\n          {orderIds.map(this.renderOrder)}\r\n        </TransitionGroup>\r\n        <div className=\"total\">\r\n          <strong>Total: {formatPrice(total)}</strong>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Order;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass AddFishForm extends React.Component {\r\n\r\n    nameRef = React.createRef();\r\n    priceRef = React.createRef();\r\n    statusRef = React.createRef();\r\n    descRef = React.createRef();\r\n    imageRef = React.createRef();\r\n\r\n    static propTypes = {\r\n        addFish: PropTypes.func\r\n    }\r\n\r\n    createFish = event => {\r\n        event.preventDefault();\r\n        const fish = {\r\n            name: this.nameRef.current.value,\r\n            price: parseFloat(this.priceRef.current.value),\r\n            status: this.statusRef.current.value,\r\n            image: this.imageRef.current.value,\r\n            desc: this.descRef.current.value,\r\n        };\r\n        this.props.addFish(fish);\r\n        event.currentTarget.reset();\r\n        \r\n    }\r\n\r\n    render() {\r\n        return(\r\n          <form className='fish-edit' onSubmit={this.createFish}>\r\n              <input name='name' ref={this.nameRef} type=\"text\" placeholeder='Name'/>\r\n              <input name='price' ref={this.priceRef}  type=\"text\" placeholeder='Price'/>\r\n              <select name='status' ref={this.statusRef} >\r\n                  <option value=\"available\">Fresh!</option>\r\n                  <option value=\"unavailable\">Sold Out!</option>\r\n              </select>\r\n              <textarea name='desc' ref={this.descRef} ></textarea>\r\n              <input name='image' ref={this.imageRef} type=\"text\" placeholeder='Image'/>\r\n              <button type='submit'> + Add Fish</button>\r\n          </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddFishForm;","import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nclass EditFishForm extends React.Component {\r\n\r\n    static propTypes = {\r\n\r\n      fish: PropTypes.shape({\r\n        name: PropTypes.string, \r\n        image: PropTypes.string,\r\n        price: PropTypes.number, \r\n        status: PropTypes.string,\r\n        desc: PropTypes.string\r\n      }),\r\n      index: PropTypes.string,\r\n      updatedFish: PropTypes.func\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        console.log(event.currentTarget.name);\r\n        const updatedFish = {\r\n            ...this.props.fish\r\n        }\r\n        updatedFish[event.currentTarget.name] = event.currentTarget.value;\r\n        this.props.updateFish(this.props.index, updatedFish)\r\n    }\r\n\r\n    handleClick = () => {\r\n      this.props.deleteFish(this.props.index);\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"fish-edit\">\r\n        <input\r\n          name=\"name\"\r\n          type=\"text\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.name}\r\n        />\r\n        <input\r\n          name=\"price\"\r\n          type=\"text\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.price}\r\n        />\r\n        <select\r\n          name=\"status\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.status}\r\n        >\r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold Out!</option>\r\n        </select>\r\n        <textarea\r\n          name=\"desc\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.desc}\r\n        ></textarea>\r\n        <input\r\n          name=\"image\"\r\n          type=\"text\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.image}\r\n        />\r\n        <button type='submit' onClick={this.handleClick}>Delete Fish</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditFishForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Login = (props) => (\r\n    <nav className=\"login\">\r\n        <h2>Inventory Login</h2>\r\n        <p>Sign in to manage your store's inventory</p>\r\n        <button className='github' onClick={() => props.authenticate('Google')}>Log in with Google</button>\r\n        <button className='facebook' onClick={() => props.authenticate('Facebook')}>Log in with Facebook</button>\r\n    </nav>\r\n)\r\n\r\nLogin.propTypes = {\r\n    authenticate: PropTypes.func.isRequired\r\n}\r\nexport default Login;","import Rebase from 're-base';\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n\r\n        apiKey: \"AIzaSyAcAcUFwxsxR-_wsarkhkL2ylY7xyUMe9o\",\r\n        authDomain: \"catch-of-the-day-2-ea688.firebaseapp.com\",\r\n        databaseURL: \"https://catch-of-the-day-2-ea688.firebaseio.com\"\r\n      \r\n})\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\nexport {firebaseApp};\r\n\r\nexport default base;","import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\nimport firebase from 'firebase'\r\nimport AddFishForm from \"./AddFishForm\";\r\nimport EditFishForm from \"./EditFishForm\";\r\nimport Login from \"./Login\";\r\nimport base, {firebaseApp} from '../base';\r\n\r\nclass Inventory extends React.Component {\r\n\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    updateFish: PropTypes.func,\r\n    deleteFish: PropTypes.func,\r\n    loadSampleFishes: PropTypes.func\r\n  }\r\n\r\n  state = {\r\n    uid: null,\r\n    owner: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      if(user) {\r\n        this.authHandler({user});\r\n      }\r\n    })\r\n  }\r\n\r\n  authHandler = async (authData) => {\r\n    const store = await base.fetch(this.props.storeId, {context: this})\r\n\r\n    if(!store.owner) {\r\n      await base.post(`${this.props.storeId}/owner`, {\r\n        data: authData.user.uid\r\n      })\r\n    }\r\n\r\n    this.setState({\r\n      uid: authData.user.uid,\r\n      owner: store.owner || authData.user.uid\r\n    })\r\n  }\r\n  authenticate = (provider) => {\r\n    \r\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n    firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\r\n  }\r\n\r\n  logout = async () => {\r\n    console.log('logging out');\r\n    await firebase.auth().signOut();\r\n    this.setState({uid: null})\r\n  }\r\n\r\n  render() {\r\n\r\n    const logout = <button onClick={this.logout}>Log Out</button>\r\n\r\n    if(!this.state.uid) {\r\n      return <Login authenticate={this.authenticate}/>\r\n    }\r\n\r\n    if(this.state.uid !== this.state.owner) {\r\n      console.log(this.state.uid);\r\n      console.log(this.state.owner);\r\n      return (\r\n        <div>\r\n          <p>Sorry! You are not the owner.</p>\r\n          {logout}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    console.log(this.state.uid);\r\n    console.log(this.state.owner);\r\n    return (\r\n      <div className=\"inventory\">\r\n        <h2>Inventory</h2>\r\n        {logout}\r\n        {Object.keys(this.props.fishes).map((key) => (\r\n          <EditFishForm\r\n            key={key}\r\n            index={key}\r\n            fish={this.props.fishes[key]}\r\n            updateFish={this.props.updateFish}\r\n            deleteFish = {this.props.deleteFish}\r\n          />\r\n        ))}\r\n        <AddFishForm addFish={this.props.addFish} />\r\n        <button onClick={this.props.loadSampleFishes}>\r\n          Load Sample Fishes\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Inventory;\r\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport {formatPrice} from '../helpers';\r\n\r\nclass Fish extends React.Component {\r\n\r\n    static propTypes = {\r\n        details: PropTypes.shape({\r\n            name: PropTypes.string, \r\n            image: PropTypes.string,\r\n            price: PropTypes.number, \r\n            status: PropTypes.string,\r\n            desc: PropTypes.string \r\n        }),\r\n        addToOrder: PropTypes.func\r\n    }\r\n    \r\n    render() {\r\n        const {name, image, price, desc, status} = this.props.details;\r\n        const isAvailable = status === 'available';\r\n        return(\r\n            <div className=\"single-fish\">\r\n                <li className='menu-fish'>\r\n                    <img src={image} alt={name} />\r\n                    <h3 className='fish-name'>\r\n                        {name}\r\n        <span className='price'>{formatPrice(price)}</span>\r\n                    </h3>\r\n        <p>{desc}</p>\r\n        <button disabled={!isAvailable} onClick={() => this.props.addToOrder(this.props.index)}>{isAvailable ? 'Add To Chart' : 'Sold Out'}</button>\r\n                </li>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Fish;","import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\nimport Header from \"./Header\";\r\nimport Order from \"./Order\";\r\nimport Inventory from \"./Inventory\";\r\nimport sampleFishes from \"../sample-fishes\";\r\nimport Fish from \"./Fish\";\r\nimport base from \"../base\";\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    fishes: {},\r\n    order: {},\r\n  };\r\n\r\n  static propTypes = {\r\n    match: PropTypes.object\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { params } = this.props.match;\r\n    const localStorageRef = localStorage.getItem(params.storeId);\r\n    if (localStorageRef) {\r\n      this.setState({ order: JSON.parse(localStorageRef) });\r\n    }\r\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\r\n      context: this,\r\n      state: \"fishes\",\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    localStorage.setItem(\r\n      this.props.match.params.storeId,\r\n      JSON.stringify(this.state.order)\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    base.removeBinding(this.ref);\r\n  }\r\n\r\n  addFish = (fish) => {\r\n    const fishes = { ...this.state.fishes };\r\n    fishes[`fish${Date.now()}`] = fish;\r\n    console.log(fishes);\r\n    this.setState({\r\n      fishes: fishes,\r\n    });\r\n  };\r\n\r\n  updateFish = (key, updatedFish) => {\r\n      const fishes = {...this.props.fishes};\r\n      fishes[key] = updatedFish;\r\n      this.setState({fishes: fishes});\r\n  }\r\n  \r\n  deleteFish = (key) => {\r\n    const fishes = {...this.state.fishes};\r\n    fishes[key] = null;\r\n    this.setState({fishes});\r\n    console.log(this.state.fishes);\r\n  }\r\n\r\n  \r\n\r\n  loadSampleFishes = () => {\r\n    this.setState({\r\n      fishes: sampleFishes,\r\n    });\r\n  };\r\n\r\n  addToOrder = (key) => {\r\n    const order = { ...this.state.order };\r\n    order[key] = order[key] + 1 || 1;\r\n    this.setState({ order });\r\n  };\r\n\r\n  removeFromOrder = (key) => {\r\n    const order = { ...this.state.order };\r\n    delete order[key];\r\n    this.setState({ order });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"catch-of-the-day\">\r\n        <div className=\"menu\">\r\n          <Header tagline=\"Fresh Seafood  Market\" />\r\n          <ul className=\"fishes\">\r\n            {Object.keys(this.state.fishes).map((key) => (\r\n              <Fish\r\n                key={key}\r\n                index={key}\r\n                details={this.state.fishes[key]}\r\n                addToOrder={this.addToOrder}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <Order fishes={this.state.fishes} order={this.state.order} removeFromOrder={this.removeFromOrder}/>\r\n        <Inventory\r\n          addFish={this.addFish}\r\n          updateFish={this.updateFish}\r\n          deleteFish = {this.deleteFish}\r\n          loadSampleFishes={this.loadSampleFishes}\r\n          fishes={this.state.fishes}\r\n          storeId = {this.props.match.params.storeId}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n    \r\n    <div>\r\n       <h2>Not Found!!!</h2> \r\n    </div>\r\n);\r\n\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport StorePicker from './StorePicker';\r\nimport App from './App';\r\nimport NotFound from './NotFound';\r\n\r\n//Since we don't need to states or other things we define a stateless fuction instead of a class\r\nconst Router = () => \r\n   ( <BrowserRouter>\r\n        <Switch>\r\n            <Route exact path='/' component={StorePicker}></Route>\r\n            <Route path='/store/:storeId' component={App}></Route>\r\n            <Route component={NotFound}></Route>\r\n        </Switch>\r\n    </BrowserRouter>\r\n    )\r\n\r\n\r\nexport default Router;","import React from 'react';\r\nimport {render} from 'react-dom';\r\nimport './css/style.css';\r\nimport Router from './components/Router';\r\n\r\n\r\nrender(<Router />, document.querySelector('#main'));"],"sourceRoot":""}